{"version":3,"sources":["webpack:///./src/templates/blog-post/content/toc.tsx","webpack:///./src/components/molecules/bio.tsx","webpack:///./src/templates/blog-post/content/index.tsx","webpack:///./src/assets/icon/arrow/left.tsx","webpack:///./src/assets/icon/arrow/right.tsx","webpack:///./src/components/molecules/post-card/context.tsx","webpack:///./src/templates/blog-post/nav.tsx","webpack:///./src/components/organisms/comment-section.tsx","webpack:///./src/templates/blog-post/index.tsx"],"names":["BlogPostTemplateTableOfContents","content","currentHeaderHref","selectedHeaderCSS","css","NAVY","Wrapper","Title","className","dangerouslySetInnerHTML","__html","styled","div","p","TOC","Bio","author","useStaticQuery","site","siteMetadata","src","width","height","alt","circle","cover","style","marginRight","P","name","target","href","React","memo","BLACK","BlogPostTemplateContent","frontmatter","html","tableOfContents","useState","setcurrentHeaderHref","thumbnail","title","tags","date","useEffect","handleScroll","autoLinkHeaders","document","querySelectorAll","i","length","header","isLast","autoLinkHeaderTop","getBoundingClientRect","top","headerHref","replace","window","location","origin","addEventListener","removeEventListener","Article","H1","Row","map","tag","key","StyledLink","to","Name","dayjs","format","fluid","childImageSharp","maxWidth","objectFit","margin","border","LIGHT_GREY","article","h1","Date","MIDDLE_GREY","Link","ArrowLeftIcon","fill","BLUE","xmlns","viewBox","points","ArrowRightIcon","ContextPostCard","type","fields","slug","Circle","Label","marginLeft","props","LIGHT_BLUE","BlogPostTemplateNav","next","previous","nav","CommentSection","repo","containerRef","useRef","useLayoutEffect","scriptElement","createElement","attributes","theme","label","crossOrigin","async","Object","entries","forEach","value","setAttribute","current","appendChild","Div","ref","BlogPostTemplate","data","pageContext","post","markdownRemark","excerpt","description","url","siteUrl","image","schemaOrgJSONLD","getSchemaOrgJSONLD","datePublished","pathname","meta","JSON","stringify"],"mappings":"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","file":"component---src-templates-blog-post-index-tsx-b38125493048b100e54e.js","sourcesContent":["import React from 'react';\nimport { NAVY } from 'src/constants/colors';\nimport styled, { css } from 'styled-components';\n\nexport type BlogPostTemplateTableOfContentsProps = {\n  content: string;\n  currentHeaderHref: string;\n};\n\nexport default function BlogPostTemplateTableOfContents({\n  content,\n  currentHeaderHref,\n}: BlogPostTemplateTableOfContentsProps) {\n  const selectedHeaderCSS = css`\n    li a[href='${currentHeaderHref}'] {\n      font-weight: bold;\n      color: ${NAVY};\n    }\n  `;\n\n  return (\n    <Wrapper>\n      <Title>TABLE OF CONTENTS</Title>\n      <TOC\n        css={selectedHeaderCSS}\n        className=\"tableOfContent\"\n        dangerouslySetInnerHTML={{ __html: content }}\n      />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  position: sticky;\n  flex: 1;\n  top: 2rem;\n  left: 2.8rem;\n  margin-top: 8.8rem;\n  margin-left: 2.8rem;\n  height: fit-content;\n  @media (max-width: 1400px) {\n    display: none;\n  }\n`;\n\nconst Title = styled.p`\n  font-size: 1.4rem;\n  margin: 0;\n  margin-bottom: 1.2rem;\n  font-weight: bold;\n`;\n\nconst TOC = styled.div`\n  flex: 1;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\n\nimport { Img } from '../atoms';\nimport { BLACK } from 'src/constants/colors';\n\nfunction Bio() {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n        }\n      }\n    }\n  `);\n\n  const { author } = data.site.siteMetadata;\n\n  return (\n    <Wrapper>\n      <Img\n        src=\"/images/profile-image.jpeg\"\n        width=\"10rem\"\n        height=\"10rem\"\n        alt=\"profile-image\"\n        circle\n        cover\n        style={{ marginRight: '2rem' }}\n      />\n      <P>\n        <strong>{author.name}</strong>\n        <br />\n        Front-end Developer\n        <br />\n        <a\n          target=\"_blank\"\n          href=\"https://gywlsp.notion.site/gywlsp/gywlsp-8073dc1ab1d346dfa75bdef108e88783\"\n        >\n          About ME ✨\n        </a>\n        <br />\n      </P>\n    </Wrapper>\n  );\n}\n\nexport default React.memo(Bio);\n\nconst Wrapper = styled.div`\n  box-shadow: none;\n  text-decoration: none;\n  color: ${BLACK};\n  display: flex;\n  flex: 1;\n  margin: 2.8rem 0;\n  align-items: center;\n`;\n\nconst P = styled.p`\n  font-size: 1.6rem;\n  margin: 0;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'gatsby';\nimport Image from 'gatsby-image';\nimport styled from 'styled-components';\nimport dayjs from 'dayjs';\n\nimport TableOfContents from './toc';\nimport Bio from 'src/components/molecules/bio';\nimport { Tag } from 'src/components/atoms';\nimport { MIDDLE_GREY, BLACK, LIGHT_GREY } from 'src/constants/colors';\n\nexport type BlogPostTemplateContentProps = {\n  frontmatter: {\n    thumbnail: any;\n    title: string;\n    tags: string[];\n    date: string;\n  };\n  html: string;\n  tableOfContents: string;\n};\n\nfunction BlogPostTemplateContent({\n  frontmatter,\n  html,\n  tableOfContents,\n}: BlogPostTemplateContentProps) {\n  const [currentHeaderHref, setcurrentHeaderHref] = useState<string>();\n  const { thumbnail, title, tags, date } = frontmatter;\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const autoLinkHeaders = document.querySelectorAll(\n        '.anchor-header'\n      ) as NodeListOf<HTMLAnchorElement>;\n\n      for (let i = 0; i < autoLinkHeaders.length; i++) {\n        const header = autoLinkHeaders[i];\n        const isLast = i === autoLinkHeaders.length - 1;\n        const { top: autoLinkHeaderTop } = header.getBoundingClientRect();\n\n        if (autoLinkHeaderTop <= 10 && !isLast) {\n          continue;\n        }\n        const headerHref =\n          autoLinkHeaderTop > 10 ? autoLinkHeaders[i - 1]?.href : header.href;\n        setcurrentHeaderHref(headerHref?.replace(window.location.origin, ''));\n        break;\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <Wrapper>\n      <Article>\n        <header>\n          <H1>{title}</H1>\n          <Row>\n            {tags.map((tag) => (\n              <Tag key={tag} name={tag} />\n            ))}\n          </Row>\n          <Row>\n            <StyledLink to=\"/\">\n              <Name>박효진 (@gywlsp)</Name>\n            </StyledLink>\n            <Date>{dayjs(date).format('YYYY년 MM월 DD일')}</Date>\n          </Row>\n          <Image\n            fluid={thumbnail.childImageSharp.fluid}\n            style={{\n              width: '80%',\n              maxWidth: '800px',\n              height: 'auto',\n              objectFit: 'cover',\n              margin: '0.8rem auto 2.4rem',\n              border: `0.1px solid ${LIGHT_GREY}`,\n            }}\n          />\n        </header>\n        <section\n          className=\"postContents\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </Article>\n      {tableOfContents && (\n        <TableOfContents\n          content={tableOfContents}\n          currentHeaderHref={currentHeaderHref}\n        />\n      )}\n    </Wrapper>\n  );\n}\n\nexport default BlogPostTemplateContent;\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Article = styled.article`\n  width: calc(100% - 260px - 1.6rem);\n  @media (max-width: 1400px) {\n    width: 100%;\n  }\n`;\n\nconst H1 = styled.h1`\n  && {\n    margin: 0;\n    margin-bottom: 0.8rem;\n    font-size: 2.6rem;\n  }\n`;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: baseline;\n`;\n\nconst Name = styled.p`\n  font-size: 1.4rem;\n  margin-right: 1.2rem;\n`;\n\nconst Date = styled.p`\n  font-size: 1.4rem;\n  font-weight: 400;\n  color: ${MIDDLE_GREY};\n`;\n\nconst StyledLink = styled(Link)`\n  box-shadow: none;\n  text-decoration: none;\n  color: ${BLACK};\n`;\n","import React from 'react';\nimport { IconProps } from '../icons';\n\nimport { BLUE } from 'src/constants/colors';\n\nexport default function ArrowLeftIcon({ style = {}, fill = BLUE }: IconProps) {\n  return (\n    <svg\n      style={{ width: '2rem', height: '2rem', ...style }}\n      fill={fill}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n    >\n      <polygon points=\"20 9.26 2.91 9.26 11.29 1.08 10.24 0.01 0 10.01 10.24 20.01 11.29 18.94 2.91 10.76 20 10.76 20 9.26\" />\n    </svg>\n  );\n}\n","import React from 'react';\nimport { IconProps } from '../icons';\n\nimport { BLUE } from 'src/constants/colors';\n\nexport default function ArrowRightIcon({ style = {}, fill = BLUE }: IconProps) {\n  return (\n    <svg\n      style={{ width: '2rem', height: '2rem', ...style }}\n      fill={fill}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n    >\n      <polygon points=\"0 10.76 17.09 10.76 8.71 18.94 9.76 20.01 20 10.01 9.76 0.01 8.71 1.08 17.09 9.26 0 9.26 0 10.76\" />{' '}\n    </svg>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nimport ArrowLeftIcon from 'src/assets/icon/arrow/left';\nimport ArrowRightIcon from 'src/assets/icon/arrow/right';\nimport { BLACK, BLUE, LIGHT_BLUE } from 'src/constants/colors';\n\nexport type ContextType = 'previous' | 'next';\n\nexport type ContextPostCardProps = {\n  type: ContextType;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    title: string;\n  };\n};\n\nexport default function ContextPostCard({\n  type,\n  fields,\n  frontmatter,\n}: ContextPostCardProps) {\n  return (\n    <Wrapper to={fields.slug} type={type}>\n      {type === 'previous' && (\n        <Circle style={{ marginRight: '1.2rem' }}>\n          <ArrowLeftIcon />\n        </Circle>\n      )}\n      <div>\n        <Label>{type === 'previous' ? '이전' : '다음'} 포스트</Label>\n        <Title>{frontmatter.title}</Title>\n      </div>\n      {type === 'next' && (\n        <Circle style={{ marginLeft: '1.2rem' }}>\n          <ArrowRightIcon />\n        </Circle>\n      )}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled(Link)<{ type: ContextType }>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 2rem;\n  ${(props) =>\n    props.type === 'previous' ? 'margin-right: auto' : 'margin-left: auto'};\n  background-color: ${LIGHT_BLUE};\n  box-shadow: none;\n  text-decoration: none;\n  margin-bottom: 1.2rem;\n`;\n\nconst Circle = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 0.8rem;\n  align-items: center;\n  border: 0.1rem solid ${BLUE};\n  border-radius: 99999px;\n`;\n\nconst Label = styled.p`\n  margin: 0;\n  margin-bottom: 0.4rem;\n  font-size: 1.4rem;\n  color: ${BLACK};\n`;\n\nconst Title = styled.p`\n  margin: 0;\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: ${BLACK};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-wrap: break-word;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport ContextPostCard, {\n  ContextPostCardProps,\n} from 'src/components/molecules/post-card/context';\n\nexport type BlogPostTemplateNavProps = {\n  previous: ContextPostCardProps;\n  next: ContextPostCardProps;\n};\n\nfunction BlogPostTemplateNav({ next, previous }: BlogPostTemplateNavProps) {\n  return (\n    <Wrapper>\n      {next && <ContextPostCard type=\"next\" {...next} />}\n      {previous && <ContextPostCard type=\"previous\" {...previous} />}\n    </Wrapper>\n  );\n}\n\nexport default React.memo(BlogPostTemplateNav);\n\nconst Wrapper = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  width: calc(100% - 260px - 1.6rem);\n  @media (max-width: 1400px) {\n    width: 100%;\n  }\n  margin-top: 2rem;\n`;\n","import React, { useRef, useLayoutEffect } from 'react';\nimport styled from 'styled-components';\n\nexport interface ICommentSectionProps {\n  repo: string;\n}\n\nexport default function CommentSection({ repo }: ICommentSectionProps) {\n  const containerRef = useRef<HTMLDivElement>();\n  useLayoutEffect(() => {\n    const scriptElement = document.createElement('script');\n\n    const attributes = {\n      src: 'https://utteranc.es/client.js',\n      repo,\n      theme: 'github-light',\n      'issue-term': 'pathname',\n      label: '💬 comments',\n      crossOrigin: 'anonymous',\n      async: 'true',\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      scriptElement.setAttribute(key, value);\n    });\n\n    containerRef?.current?.appendChild(scriptElement);\n  }, [repo]);\n\n  return <Div ref={containerRef} />;\n}\n\nconst Div = styled.div`\n  width: calc(100% - 260px - 1.6rem);\n  @media (max-width: 1400px) {\n    width: 100%;\n  }\n`;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\n\nimport Layout from 'src/components/templates/layout';\nimport SEO, { getSchemaOrgJSONLD } from 'src/components/templates/seo';\nimport Content from './content';\nimport Nav from './nav';\nimport CommentSection from 'src/components/organisms/comment-section';\n\nfunction BlogPostTemplate({ data, pageContext, location }) {\n  const post = data.markdownRemark;\n\n  const { fields, frontmatter, excerpt } = post;\n  const { slug } = fields;\n  const { title, description, date, thumbnail } = frontmatter;\n\n  const url = `${data.site.siteMetadata.siteUrl}${slug}`;\n  const image = thumbnail.childImageSharp.fluid.src;\n\n  const schemaOrgJSONLD = getSchemaOrgJSONLD({\n    url,\n    title,\n    image,\n    description: excerpt,\n    datePublished: date,\n  });\n\n  return (\n    <Layout pathname={location.pathname}>\n      <SEO\n        title={title}\n        description={description || excerpt}\n        meta={[\n          { name: 'image', content: image },\n          { name: 'og:image', content: image },\n          { name: 'og:type', content: 'article' },\n          { name: 'og:url', content: url },\n        ]}\n      >\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n      </SEO>\n      <Wrapper>\n        <Content {...post} />\n        <Nav {...pageContext} />\n        <CommentSection repo=\"gywlsp/blog-comments\" />\n      </Wrapper>\n    </Layout>\n  );\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n      }\n      tableOfContents\n      frontmatter {\n        title\n        date\n        description\n        tags\n        thumbnail {\n          childImageSharp {\n            fluid(maxWidth: 1200) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n"],"sourceRoot":""}